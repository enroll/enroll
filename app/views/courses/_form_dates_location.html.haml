.course-schedule
  .form-section
    %h2.bordered.offset Dates

    = form.input :starts_at, as: :string, input_html: {class: 'datepicker small', value: form.object.starts_at.try(:strftime, '%Y-%m-%d')}, :required => true, label: "Start date"
    = form.input :ends_at, as: :string, input_html: {class: 'datepicker small', value: form.object.ends_at.try(:strftime, '%Y-%m-%d')}, :required => true, label: "End date"
    .form-group.campaign_ends_at
      %label.control-label Campaign end date
      .controls
        .date Not set.
        .campaign-help.alert.alert-warning
          You'll have 
          %span.days_until_campaign_ends N
          days to get the minimum signups for your course.
          .small
            Courses on Enroll only run if they reach their specified minimum number of signups.
  .form-section.course-schedule

  .form-section
    %h2.bordered.offset Location

    = form.simple_fields_for(:location) do |location|
      = location.input :name, label: 'Venue name'
      = location.input :address
      = location.input :address_2
      = location.input :city
      = location.input :state
      = location.input :zip
      = location.input :phone

:coffeescript
  new CourseSchedule(el: '.course-schedule', schedules: #{form.object.schedules.to_json})